{{ 'customer.css' | asset_url | stylesheet_tag }}

<script src="{{ 'customer.js' | asset_url }}" defer></script>
{% comment %}
  {%- style -%}
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
      padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
    }

    @media screen and (min-width: 750px) {
      .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top }}px;
        padding-bottom: {{ section.settings.padding_bottom }}px;
      }
    }
  {%- endstyle -%}
{% endcomment %}

<div class="content innerpage_content">
  <div class="innerpage_wrapper foJ_Thin btm">
    {%- paginate customer.addresses by 999 -%}
      <div class="customer addresses section-{{ section.id }}-padding" data-customer-addresses>
        <!--
          {% comment %}
          <svg style="display: none">
            <symbol id="icon-caret" viewBox="0 0 10 6">
              <path fill-rule="evenodd" clip-rule="evenodd" d="M9.354.646a.5.5 0 00-.708 0L5 4.293 1.354.646a.5.5 0 00-.708.708l4 4a.5.5 0 00.708 0l4-4a.5.5 0 000-.708z" fill="currentColor">
            </symbol>
          </svg>
          {% endcomment %}
        -->
        <h1 class="page_title_head foJ_Bld">{{ 'customer.addresses.title' | t }}</h1>
        <a class="t_link" href="{{ routes.account_url }}"><span class="icon back"><span></span></span>{{ 'customer.account.return' | t }}</a>

        <!-- 新しい住所の追加 -->
        <div class="add_new_address" data-address>
          <button
            type="button"
            aria-expanded="false"
            aria-controls="AddAddress"
            class="btn"
          >
            <span class="info foJ_Mid">{{ 'customer.addresses.add_new' | t }}</span>
            <div class="icon add_address"></div>
          </button>
          <div id="AddAddress">
            <h2 id="AddressNewHeading" class="foJ_Mid">{{ 'customer.addresses.add_new' | t }}</h2>
            {%- form 'customer_address', customer.new_address, aria-labelledBy: 'AddressNewHeading' -%}
              <!-- 姓 -->
              <div class="field w_2col">
                <label for="AddressLastNameNew">
                  {{- 'customer.addresses.last_name' | t -}}
                  <span class="require" aria-hidden="true">{{ 'customer.addresses.require' | t }}</span></label
                >
                <input
                  type="text"
                  id="AddressLastNameNew"
                  name="address[last_name]"
                  value="{{ form.last_name }}"
                  autocomplete="family-name"
                  placeholder="{{ 'customer.addresses.last_name' | t }}"
                  required
                >
              </div>
              <!-- 名 -->
              <div class="field w_2col">
                <label for="AddressFirstNameNew">
                  {{- 'customer.addresses.first_name' | t -}}
                  <span class="require" aria-hidden="true">{{ 'customer.addresses.require' | t }}</span></label
                >
                <input
                  type="text"
                  id="AddressFirstNameNew"
                  name="address[first_name]"
                  value="{{ form.first_name }}"
                  autocomplete="given-name"
                  placeholder="{{ 'customer.addresses.first_name' | t }}"
                  required
                >
              </div>

              <!-- 会社 -->
              <div class="field w_1col">
                <label for="AddressCompanyNew">{{ 'customer.addresses.company' | t }}</label>
                <input
                  type="text"
                  id="AddressCompanyNew"
                  name="address[company]"
                  value="{{ form.company }}"
                  autocomplete="organization"
                  placeholder="{{ 'customer.addresses.company' | t }}"
                >
              </div>
              <!-- 電話番号 -->
              <div class="field w_1col">
                <label for="AddressPhoneNew">
                  {{- 'customer.addresses.phone' | t -}}
                  <span class="require" aria-hidden="true">{{ 'customer.addresses.require' | t }}</span></label
                >
                <input
                  type="tel"
                  id="AddressPhoneNew"
                  name="address[phone]"
                  value="{{ form.phone }}"
                  autocomplete="tel"
                  placeholder="{{ 'customer.addresses.phone' | t }}"
                  required
                >
              </div>
              <!-- 見出し -->
              <div class="min_head w_col1">
                <span
                  >ご住所<span class="require" aria-hidden="true">{{ 'customer.addresses.require' | t }}</span>
                </span>
              </div>
              <!-- 郵便番号 -->
              <div class="field w_3col no-margin">
                <!-- label for="AddressZipNew">{{ 'customer.addresses.zip' | t }}</label -->
                <input
                  type="text"
                  id="AddressZipNew"
                  name="address[zip]"
                  value="{{ form.zip }}"
                  autocapitalize="characters"
                  autocomplete="postal-code"
                  placeholder="{{ 'customer.addresses.zip' | t }}"
                  required
                >
              </div>
              <!-- 国 -->
              <input type="hidden" id="AddressCountryNew" name="address[country]" value="Japan">
              <!-- 都道府県 -->
              <div class="field w_3col no-margin" id="AddressProvinceContainerNew">
                <label for="AddressProvinceNew" class="selectbox">
                  {% comment %}{{ 'customer.addresses.province' | t }}{% endcomment %}
                    <select
                      id="AddressProvinceNew"
                      name="address[province]"
                      data-default=""
                      autocomplete="address-level1"
                      required
                    >
                      {%- render 'select_province' -%}
                    </select>
                    <svg aria-hidden="true" focusable="false" viewBox="0 0 10 6">
                      <use href="#icon-caret" />
                    </svg>
                </label>
              </div>
              <!-- 市町区村 -->
              <div class="field w_2col no-margin">
                <label for="AddressCityNew" class="subset">{{ 'customer.addresses.city' | t }}</label>
                <input
                  type="text"
                  id="AddressCityNew"
                  name="address[city]"
                  value="{{ form.city }}"
                  autocomplete="address-level2"
                  placeholder="{{ 'customer.addresses.city' | t }}"
                  required
                >
              </div>
              <!-- 住所1 -->
              <div class="field w_1col no-margin">
                <label for="AddressAddress1New" class="subset">{{ 'customer.addresses.address1' | t }}</label>
                <input
                  type="text"
                  id="AddressAddress1New"
                  name="address[address1]"
                  value="{{ form.address1 }}"
                  autocomplete="address-line1"
                  placeholder="{{ 'customer.addresses.address1' | t }}"
                  required
                >
              </div>
              <!-- 住所2 -->
              <div class="field w_1col no-margin">
                <label for="AddressAddress2New" class="subset">{{ 'customer.addresses.address2' | t }}</label>
                <input
                  type="text"
                  id="AddressAddress2New"
                  name="address[address2]"
                  value="{{ form.address2 }}"
                  autocomplete="address-line2"
                  placeholder="{{ 'customer.addresses.address2' | t }}"
                >
              </div>

              <!-- デフォルトの住所 -->
              <div class="default_address_check">
                
                <label for="address_default_address_new">
                  {{ form.set_as_default_checkbox }}{{ 'customer.addresses.set_default' | t }}
                </label>
              </div>
              <div class="addresses_edit_btn">
                <button class="t_link no_deco button_mode customer_addresses_add">
                  <span class="icon submit"><span></span></span>
                  {{ 'customer.addresses.add' | t }}
                </button>
                <button class="t_link no_deco button_mode" type="reset">
                  <span class="icon close"><span></span></span>
                  {{ 'customer.addresses.cancel' | t }}
                </button>
              </div>
            {%- endform -%}
          </div>
        </div>
        <!-- //新しい住所の追加 -->

        <div class="addresses_list_box">
          <ul class="addresses_list" role="list">
            {%- for address in customer.addresses -%}
              {%- if address == customer.default_address -%}
                <li class="default" data-address>
                  <h5 class="default_address foJ_Mid">{{ 'customer.addresses.default' | t }}</h5>
                  <br>
                  {%- render 'customer-addresses-edit-form', address: address -%}
                </li>
              {%- endif -%}
            {%- endfor -%}

            {%- for address in customer.addresses -%}
              {%- if address != customer.default_address -%}
                <li data-address>
                  {%- render 'customer-addresses-edit-form', address: address -%}
                </li>
              {%- endif -%}
            {%- endfor -%}
          </ul>

          {%- if paginate.pages > 1 -%}
            {%- render 'pagination', paginate: paginate -%}
          {%- endif -%}
        </div>
        <!-- /address_list -->
      </div>
    {%- endpaginate -%}
  </div>
</div>
<script>
  window.addEventListener('load', () => {
    typeof CustomerAddresses !== 'undefined' && new CustomerAddresses();
  });

  //既存の住所から県名を引っ張って、編集フォームに反映する
  document.addEventListener('DOMContentLoaded', function () {
    var a=document.getElementsByTagName("select");
    var selectedStr;
    for(var i =0;i<a.length;i++){
      selectedStr=a[i].getAttribute("data-default");
      var b=a[i].getElementsByTagName("option");
      for(var j=0;j<b.length;j++){
        if(selectedStr==b[j].text){
          b[j].selected=true;
        }else{

        }
      }
    }
  });
</script>

{% schema %}
{
  "name": "t:sections.main-addresses.name",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}
